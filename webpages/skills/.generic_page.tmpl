{{template "base_extended" .}}

{{define "content"}}
<div class="container">
    <div class="container_with_background">
        <h2>Skills</h2>
        <p> This page goes into my strengths and coding skills. On the bottom of the page, i also loose some
            words, about what i do to improve myself. </p>
        <div class="container_with_background">
            <h2> Strengths</h2>
            <table>
                <tr>
                    <td valign="top" style="white-space:nowrap;"> Ability to take Critic
                    <td>
                    <td valign="top"> Instead of getting defensive, when someone critics me or my work, i see it as an
                        opportunity to learn something new. This may sound unimportant at first, however i think it is
                        actually oneof the most important skills, not only for personal growth,
                        but also in order to have constructive discussion about ongoing projects.
                    </td>
                </tr>
                <tr>
                    <td valign="top"> Abstract concepts
                    <td>
                    <td valign="top"> I'm able to understand abstract concepts fast. This is mostly a learned skill,
                        that i trained when studying mathematics and is a real help,
                        when designing solutions to problems.
                    </td>
                </tr>
                <tr>
                    <td valign="top" style="white-space:nowrap;"> fast learning
                    <td>
                    <td valign="top">I'm generally fast at learning new stuff (at least when it comes to logical stuff
                        (as it is used in programming, or workflows that make sense. Sadly i'm less good at learning
                        things mostly based on memorization, like for example foreign languages.))
                        This helps me to adapt fast to changing work environments or adapting new skills.<br>
                        This also means that if i'm faced with a problem requiring skill that i do not have, instead of
                        not doing it, i rather learn that.

                    </td>
                </tr>
                <tr>
                    <td valign="top" style="white-space:nowrap;"> Strive for correctness
                    <td>
                    <td valign="top"> I alway strive to make a solution, that is as good as possible, in this regard i
                        also not satisfied with half truths but instead want statements that are undisputable true.
                        This is also something mostly coming from my Maths education.
                    </td>
                </tr>


            </table>
        </div>
        
        <div class="container_with_background">
            <h2> Coding and related skills</h2>
            <div class="container_with_background">
                <h2> Programming Languages</h2>
                <table>
                    <tr>
                        <td valign="top"> C++</td>
                        <td valign="top">This is the Language with which i "really" learned to code at ETH.
                            Due to it's formality it is still my favorite coding language.
                        </td>
                    </tr>
                    <tr>
                        <td valign="top">Python</td>
                        <td valign="top">I used this language in many courses at ETH. In my current work i also use that
                            language for  different data analysis.
                            Other then that it is my go to language which i use if i want to make a fast analysis (for
                            example of a probabilistic problem).
                        </td>
                    </tr>
                    <tr>
                        <td valign="top"><a href="https://en.wikipedia.org/wiki/ABAP" target="_blank">ABAP</a></td>
                        <td valign="top">I used this language in my SAP stage. Even so i never used this language
                            before, i was able
                            to quickly write applications in SAP, proofing to me, that learning to code makes learning
                            new languages easy.</td>
                    </tr>
                    <tr>
                        <td valign="top"><a href="https://en.wikipedia.org/wiki/Data_Analysis_Expressions"
                                target="_blank">DAX</a>
                        </td>
                        <td valign="top">Debatable if this is a coding language, but i used this to write PowerBI
                            reports.</td>
                    </tr>
                    <tr>
                        <td valign="top">SQL/KQL</td>
                        <td valign="top">I'm using T-SQL on a daily basis at work. Where i use SQL to implement varios  business logic.
                        Including quite complex procedure to implement
                            data evaluation of production data. Other than that i also have some experience with
                            PostgreSQL, as well as KQL.
                        </td>

                    </tr>
                    <tr>
                        <td valign="top">Java</td>
                        <td valign="top">  I recently got a <a href="https://www.oracle.com/education/certification/">Oracle Certified Professional: Java SE 21 Developer Certificate </a>.
                                           In addition Java was the first programming language i played around with. Later i used it to write my Matura project.
                            I played around with java during "Kantonsschule", also writing the my Matura
                            Project using Java. Nowadays i'm using it for personal projects.
    
                        </td>

                    </tr>
                    <tr>
                        <td valign="top">Go</td>
                        <td valign="top"> I only dabbled into this language a little bit. The program hosting this page was also written in go by me.
                        </td>

                    </tr>
                    <tr>
                        <td valign="top">Powershell</td>
                        <td valign="top"> I use Powershell from time to time to optimize tasks in the daily business.
                        </td>

                    </tr>
                    <tr>
                        <td valign="top">Javascript</td>
                        <td valign="top">I have a basic knowledge with Javascript. However i try to limit the use of it,
                            as i prefer writing code in the backend.
                        </td>
                    </tr>
                </table>
                <p> In addition to the above mentioned languages, i dabbled into Scala, C as well as C#, but i never did
                    more then that with those languages. </p>
                <p>Also if you read this, in relation with an application, i'm principle open to learn one programming
                    language in the time between signing the contract and the beginning of my work at your company. With
                    learning a language means, that i know the language, as well as an IDE to an extend, that i can do
                    the assigned tasks without being hindered by missing knowledge of the language.</p>
            </div>
            <div class="container_with_background">
                <h2> Related tools</h2>
                <p>I also am experienced with GIT and LaTeX. I did also work a bit with HTML and CSS, but that are
                    "languages" with which i still am gathering experience.
                </p>
                <p> In the regard of Git i also have some experience with setting up Pull Request requirements on
                    Atlassian Bitbucket.</p>
                <p>I would not say, that i'm professional, but i'm learning a lot about cleancode, both by reading a
                    book as well having discussion about this topic in my Team.</p>
                <p>Considering development environments: i normally work with VSCode,Intellij, Visual Studio, Jupyter Notebooks,
                    Notepad++, microsoft sql server management studio. </p>
                <p>I work with Docker, both using docker files from repositories, as well as writing my own (for example
                    for hosting this site). 
                </p> I'm used to work with both windows (used at work) as well as Linux (on my personal device as well as on servers.)
                <p>I also have quite some experience with the AZURE environment and tools, both from an Sysadmin point
                    of view as well as a Developer. This includes but is not limited to: PowerApps, PowerBi, Azure Data
                    Factory, Azure Logic Apps, PowerAutomate,Azure Stream Analytics, Azure Data Cluster.</p>
            </div>
        </div>
        <div class="container_with_background">
            <h2> Soft Skills</h2>
            <p>
                I would say of my self, that i'm able to discuss in a solution oriented ways with my team members.<br>
                In order to provide good solutions to problems i learned to take the view of the stakeholders an develop
                a solution that suits their needs.<br>
                I normally have a good view of the entire project and thus speak up as soon as i see a potential
                conflict with a current development.<br>
                In regard of languages i speak, german is my Mother tongue and i'm quite proficient in English. (I do
                not have any certificate, but i did my Bachelor and Master mostly in English.)

            </p>

        </div>
    </div>
    <div class="container_with_background">
        <h2>Current learning</h2>
        <p>Even so i finished my academic studies this does not mean that i stopped learning new things.<br>
            My main source of learning inputs are mostly books. That beeing said i obviosly also utilise online resources like <a href="https://www.udemy.com/" target="_blank"> Udemy</a>-Courses,
            Youtube Videos, BlogPost and  Documentation. When possible i also like to discuss those things with
            others, to improve my understanding. <br>
            When learning something new, i'm not satisfied with just looking at a tutorial how to do it, but i also want
            to understand the concept behind it. After all "just" knowing how to do something in a particular way is not as satisfying as beeing able to adapt it to new circumstances. <br>
            That leads to me reading documentation or going through additional material. (A good example here is, that
            while writing this, i was in the process of changing this site from http to https. Finding out how to do it
            in GO is easy, there are quite a few step by step tutorials. However this leads to code that works, but also
            about which i have no idea what it does, so i looked at a couple of <a
                href="https://www.youtube.com/watch?v=j9QmMEWmcfo&t=125s&ab_channel=ByteByteGo"
                target="_blank">videos</a>, explaining the protocol behind https).
            Of course (especially at work) this is not always possible due to time constrained. In those cases i
            normally write me a note to look that topic up later.
        </p>
        <div class="container_with_background">
            <h2> Books</h2>
            <p> This list contains some of the books i read to improve my programming skills (as well as one additional book related to my current workplace).</p>
            <div class="container_with_background">
                <h2> Read books</h2>
                <ul>
                    <li>
                        "Der Toyota Weg" von jeffrey K. Liker (ISBN: 978-3-95972-473-9) <br>
                        This books explains the Toyota Way, i.e. how <a
                            href="https://en.wikipedia.org/wiki/The_Toyota_Way" target="_blank">Toyota's way</a>Toyota's
                        way of organizing the company lead to success and how other companies can adapt this.
                        We read this in a reading circle at work, where we discussed the content of this book and what
                        we do in the same way, and what we do differently.
                        This was mostly due to the fact that, SIGA follows the book closely and thus it makes a lot of
                        sense that the employees understand the principles behind this.

                    </li>
                    <li>
                        Clean Code by Robert C. Martins (ISBN: 978-3-8266-5548-7)<br>
                        After being unhappy with both my old code, as well as quite a lot of code at work, i decided to
                        improve my understanding about cleancode.
                        So i ended up reading this book and started adapting this into my own projects as well as my
                        work.
                        This lead to interesting discussions with my coworker (who then also started t read this book as
                        a reaction to this), which improved our understanding of the matter.
                    </li>

                    <li>
                        OCP Oracle Certified Professional Java SE 21 Developer Study Guide (ISBN: 978-1-394-28661-4)<br>
                        I mostly read this book to prepare for the java exam (which i passed). That being said i also learned quite a lot of details about java, which i missed in my more casual introduction to java which i had before.
                    </li>
                </ul>

            </div>
            <div class="container_with_background">
                <h2> Currently Reading </h2>
                <ul>
                    <li>
                        Head First Design Patterns: Building Extensible and Maintainable Object-Oriented Software 2nd Edition  (ISBN: 978-1-492-07800-5)<br>
                        I started to read this book in order to learn more about design patterns (and thus improve the quality of my code). However while i liked the concepts in the book,
                        i did like neither the writing style nor the fact that it did not really go into more details. Thus i stopped reading the book and started looking into more technical alternatives.
                    </li>

                    <li>
                        Head First Design Patterns: Building Extensible and Maintainable Object-Oriented Software 2nd Edition  (ISBN: 978-1-492-07800-5)<br>
                        I started to read this book in order to learn more about design patterns (and thus improve the quality of my code). However while i liked the concepts in the book,
                        i did like neither the writing style nor the fact that it did not really go into more details. Thus i stopped reading the book and started looking into more technical alternatives.
                    </li>
                </ul>

            </div>
            <div class="container_with_background">
                <h2> Upcoming reading list.</h2>
                <p>I'm always looking for new reading material to improve my skills as a Software Developer.
                    My current lists of book contending of the next place on the Currently Reading part is written down
                    below. That being said i'm happy about any reading recommondation both for a new book or against a book on the current list),
                    please write me an <a href="mailto:lukas@loetscher.swiss">email</a> about this.
                </p>
                <ul>
                    <li>Clean Architecture: A Craftsman's Guide to Software Structure and Design: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series)   (ISBN: 978-0-13-449416-6) <br>
                        Kind of the logical follow up to "Clean Code" and a book i definitly plan to read in the short future.
                    </li>
                    <li>Test Driven Development: By Example written by Kent Beck (ISBN: 978-0321146533)<br>
                        Test-Driven Development with Java: Create higher-quality software by writing tests first with SOLID and hexagonal architecture <br>
                        written by Alan Mellor (ISBN: 9781803236230) <br>
                        I want to learn more about test driven development, so one of those books is on my reading list. Not sure which one though.
                                        </li>
                </ul>
            </div>

        </div>


        </p>

    </div>
    <p> understanding</p>
    <p> TODO LEARNING/BOOK Reading!!!!!</p>
</div>


{{end}}


{{define "title"}}
Portfolio Lukas Lötscher
{{end}}